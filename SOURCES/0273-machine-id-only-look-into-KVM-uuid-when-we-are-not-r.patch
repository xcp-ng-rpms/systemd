From a777218d241e52279039da5a2ba9b5a69576583c Mon Sep 17 00:00:00 2001
From: Lennart Poettering <lennart@poettering.net>
Date: Mon, 28 Apr 2014 18:11:40 +0200
Subject: [PATCH] machine-id: only look into KVM uuid when we are not running
 in a container

Resolves: #1123452

(cherry picked from commit 0b36bbc42d3a408531517a02acaf56105b863d55)

Conflicts:
	src/core/machine-id-setup.c
---
 src/core/machine-id-setup.c | 53 +++++++++++++++++++++++----------------------
 1 file changed, 27 insertions(+), 26 deletions(-)

diff --git a/src/core/machine-id-setup.c b/src/core/machine-id-setup.c
index 291930e..8cfcf51 100644
--- a/src/core/machine-id-setup.c
+++ b/src/core/machine-id-setup.c
@@ -92,32 +92,9 @@ static int generate(char id[34], const char *root) {
                 }
         }
 
-        /* If that didn't work, see if we are running in qemu/kvm and a
-         * machine ID was passed in via -uuid on the qemu/kvm command
-         * line */
-
-        r = detect_vm(&vm_id);
-        if (r > 0 && streq(vm_id, "kvm")) {
-                char uuid[37];
-
-                fd = open("/sys/class/dmi/id/product_uuid", O_RDONLY|O_CLOEXEC|O_NOCTTY|O_NOFOLLOW);
-                if (fd >= 0) {
-                        k = loop_read(fd, uuid, 36, false);
-                        close_nointr_nofail(fd);
-
-                        if (k >= 36) {
-                                r = shorten_uuid(id, uuid);
-                                if (r >= 0) {
-                                        log_info("Initializing machine ID from KVM UUID.");
-                                        return 0;
-                                }
-                        }
-                }
-        }
-
-        /* If that didn't work either, see if we are running in a
-         * container, and a machine ID was passed in via
-         * $container_uuid the way libvirt/LXC does it */
+        /* If that didn't work, see if we are running in a container,
+         * and a machine ID was passed in via $container_uuid the way
+         * libvirt/LXC does it */
         r = detect_container(NULL);
         if (r > 0) {
                 _cleanup_free_ char *e = NULL;
@@ -132,6 +109,30 @@ static int generate(char id[34], const char *root) {
                                 }
                         }
                 }
+
+        } else {
+                /* If we are not running in a container, see if we are
+                 * running in qemu/kvm and a machine ID was passed in
+                 * via -uuid on the qemu/kvm command line */
+
+                r = detect_vm(&vm_id);
+                if (r > 0 && streq(vm_id, "kvm")) {
+                        char uuid[37];
+
+                        fd = open("/sys/class/dmi/id/product_uuid", O_RDONLY|O_CLOEXEC|O_NOCTTY|O_NOFOLLOW);
+                        if (fd >= 0) {
+                                k = loop_read(fd, uuid, 36, false);
+                                close_nointr_nofail(fd);
+
+                                if (k >= 36) {
+                                        r = shorten_uuid(id, uuid);
+                                        if (r >= 0) {
+                                                log_info("Initializing machine ID from KVM UUID.");
+                                                return 0;
+                                        }
+                                }
+                        }
+                }
         }
 
         /* If that didn't work, generate a random machine id */
