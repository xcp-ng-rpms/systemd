From 2170d1e510a9c30e71bc642b54d8b71fb01b47bc Mon Sep 17 00:00:00 2001
From: Lukas Nykryn <lnykryn@redhat.com>
Date: Tue, 18 Oct 2016 12:16:32 +0200
Subject: [PATCH] core: use emergency_action for ctr+alt+del burst

Fixes #4306

Cherry-picked from: ae8c7939df962cbf660b2b9517fe46be272f58b9
Resolves: #1353028
---
 man/systemd-system.conf.xml |  7 ++++---
 src/core/main.c             |  7 +++----
 src/core/manager.c          | 33 ++++-----------------------------
 src/core/manager.h          | 13 +------------
 4 files changed, 12 insertions(+), 48 deletions(-)

diff --git a/man/systemd-system.conf.xml b/man/systemd-system.conf.xml
index 236c20d5f..57b3b90be 100644
--- a/man/systemd-system.conf.xml
+++ b/man/systemd-system.conf.xml
@@ -105,9 +105,10 @@
         <term><varname>CtrlAltDelBurstAction=</varname></term>
 
         <listitem><para>Defines what action will be performed
-        if user presses Ctr-Alt-Delete more than 7 times in 2s.
-        Can be set to <literal>reboot-force</literal>, <literal>poweroff-force</literal>
-        or disabled with <literal>ignore</literal>. Defaults to
+        if user presses Ctrl-Alt-Delete more than 7 times in 2s.
+        Can be set to <literal>reboot-force</literal>, <literal>poweroff-force</literal>,
+        <literal>reboot-immediate</literal>, <literal>poweroff-immediate</literal>
+        or disabled with <literal>none</literal>. Defaults to
         <literal>reboot-force</literal>.
         </para></listitem>
       </varlistentry>
diff --git a/src/core/main.c b/src/core/main.c
index 6ac9c9d44..6f8367632 100644
--- a/src/core/main.c
+++ b/src/core/main.c
@@ -77,6 +77,7 @@
 #include "ima-setup.h"
 #include "smack-setup.h"
 #include "kmod-setup.h"
+#include "emergency-action.h"
 
 static enum {
         ACTION_RUN,
@@ -115,7 +116,7 @@ static FILE* arg_serialization = NULL;
 static bool arg_default_cpu_accounting = false;
 static bool arg_default_blockio_accounting = false;
 static bool arg_default_memory_accounting = false;
-static CADBurstAction arg_cad_burst_action = CAD_BURST_ACTION_REBOOT;
+static EmergencyAction arg_cad_burst_action = EMERGENCY_ACTION_REBOOT_FORCE;
 
 static void nop_handler(int sig) {}
 
@@ -626,8 +627,6 @@ static int config_parse_join_controllers(const char *unit,
         return 0;
 }
 
-static DEFINE_CONFIG_PARSE_ENUM(config_parse_cad_burst_action, cad_burst_action, CADBurstAction, "Failed to parse service restart specifier");
-
 static int parse_config_file(void) {
 
         const ConfigTableItem items[] = {
@@ -676,7 +675,7 @@ static int parse_config_file(void) {
                 { "Manager", "DefaultCPUAccounting",      config_parse_bool,             0, &arg_default_cpu_accounting            },
                 { "Manager", "DefaultBlockIOAccounting",  config_parse_bool,             0, &arg_default_blockio_accounting        },
                 { "Manager", "DefaultMemoryAccounting",   config_parse_bool,             0, &arg_default_memory_accounting         },
-                { "Manager", "CtrlAltDelBurstAction",     config_parse_cad_burst_action, 0, &arg_cad_burst_action},
+                { "Manager", "CtrlAltDelBurstAction",     config_parse_emergency_action, 0, &arg_cad_burst_action                  },
                 {}
         };
 
diff --git a/src/core/manager.c b/src/core/manager.c
index 9048dde96..8bd80e687 100644
--- a/src/core/manager.c
+++ b/src/core/manager.c
@@ -1864,28 +1864,11 @@ static void manager_handle_ctrl_alt_del(Manager *m) {
          * 7 times within 2s, we reboot/shutdown immediately,
          * unless it was disabled in system.conf */
 
-        if (ratelimit_test(&m->ctrl_alt_del_ratelimit) || m->cad_burst_action == CAD_BURST_ACTION_IGNORE)
+        if (ratelimit_test(&m->ctrl_alt_del_ratelimit) || m->cad_burst_action == EMERGENCY_ACTION_NONE)
                 manager_start_target(m, SPECIAL_CTRL_ALT_DEL_TARGET, JOB_REPLACE_IRREVERSIBLY);
-        else {
-                switch (m->cad_burst_action) {
-
-                case CAD_BURST_ACTION_REBOOT:
-                        m->exit_code = MANAGER_REBOOT;
-                        break;
-
-                case CAD_BURST_ACTION_POWEROFF:
-                        m->exit_code = MANAGER_POWEROFF;
-                        break;
-
-                default:
-                        assert_not_reached("Unknown action.");
-                }
-
-                log_notice("Ctrl-Alt-Del was pressed more than 7 times within 2s, performing immediate %s.",
-                                cad_burst_action_to_string(m->cad_burst_action));
-                status_printf(NULL, true, false, "Ctrl-Alt-Del was pressed more than 7 times within 2s, performing immediate %s.",
-                                cad_burst_action_to_string(m->cad_burst_action));
-        }
+        else
+                emergency_action(m, m->cad_burst_action, NULL,
+                                "Ctrl-Alt-Del was pressed more than 7 times within 2s");
 }
 
 static int manager_dispatch_signal_fd(sd_event_source *source, int fd, uint32_t revents, void *userdata) {
@@ -3336,11 +3319,3 @@ static const char *const manager_state_table[_MANAGER_STATE_MAX] = {
 };
 
 DEFINE_STRING_TABLE_LOOKUP(manager_state, ManagerState);
-
-static const char *const cad_burst_action_table[_CAD_BURST_ACTION_MAX] = {
-        [CAD_BURST_ACTION_IGNORE] = "ignore",
-        [CAD_BURST_ACTION_REBOOT] = "reboot-force",
-        [CAD_BURST_ACTION_POWEROFF] = "poweroff-force",
-};
-
-DEFINE_STRING_TABLE_LOOKUP(cad_burst_action, CADBurstAction);
diff --git a/src/core/manager.h b/src/core/manager.h
index 59913f489..231c076b1 100644
--- a/src/core/manager.h
+++ b/src/core/manager.h
@@ -64,14 +64,6 @@ typedef enum ManagerExitCode {
         _MANAGER_EXIT_CODE_INVALID = -1
 } ManagerExitCode;
 
-typedef enum CADBurstAction {
-        CAD_BURST_ACTION_IGNORE,
-        CAD_BURST_ACTION_REBOOT,
-        CAD_BURST_ACTION_POWEROFF,
-        _CAD_BURST_ACTION_MAX,
-        _CAD_BURST_ACTION_INVALID = -1
-} CADBurstAction;
-
 typedef enum StatusType {
         STATUS_TYPE_EPHEMERAL,
         STATUS_TYPE_NORMAL,
@@ -310,7 +302,7 @@ struct Manager {
 
         /* When the user hits C-A-D more than 7 times per 2s, do something immediately... */
         RateLimit ctrl_alt_del_ratelimit;
-        CADBurstAction cad_burst_action;
+        EmergencyAction cad_burst_action;
 };
 
 int manager_new(SystemdRunningAs running_as, bool test_run, Manager **m);
@@ -381,6 +373,3 @@ ManagerState manager_state(Manager *m);
 
 const char *manager_state_to_string(ManagerState m) _const_;
 ManagerState manager_state_from_string(const char *s) _pure_;
-
-const char *cad_burst_action_to_string(CADBurstAction a) _const_;
-CADBurstAction cad_burst_action_from_string(const char *s) _pure_;
